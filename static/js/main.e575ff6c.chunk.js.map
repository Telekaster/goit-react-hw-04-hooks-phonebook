{"version":3,"sources":["components/ContactForm/ContactForm .jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["ContactForm","handleChange","handleAddContact","className","onChange","type","name","pattern","title","required","onClick","Filter","filterContacts","ContactList","filter","contacts","deleteContact","undefined","map","item","number","id","key","toLowerCase","includes","App","useState","setContacts","setFilter","setName","setNumber","evt","target","value","find","contact","alert","contactsArr","newContact","shortid","generate","localStorage","getItem","setItem","JSON","stringify","temperaryArr","parse","push","elementForRemove","index","indexOf","splice","removeItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e575ff6c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./ContactForm.css\";\n\nfunction ContactForm({\n  handleChange,\n  handleAddContact,\n}) {\n  return (\n    <div className=\"input__area\">\n      <p>Name</p>\n      <input\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <p>Phone</p>\n      <input\n        type=\"tel\"\n        name=\"tel\"\n        onChange={handleChange}\n      />\n\n      <button\n        type=\"button\"\n        className=\"input__btn\"\n        onClick={handleAddContact}\n      >\n        Add contact\n      </button>\n    </div>\n  );\n}\n\nexport default ContactForm;\n","import React from \"react\";\n\nfunction Filter({ filterContacts }) {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input type=\"text\" onChange={filterContacts} />\n    </div>\n  );\n}\n\nexport default Filter;\n","// import React, { Component } from \"react\";\nimport styles from \"./ContactList.css\";\n\n\n\nexport default function ContactList({ filter, contacts, deleteContact }) {\n\n  return (\n    <div className=\"contacts\">\n      <ul className=\"contacts__list\">\n        {filter === undefined\n          ? contacts.map((item) => {\n            return (\n              <li key={item.key}>\n                {`${item.name}: ${item.number}`}{\" \"}\n                <button\n                  onClick={deleteContact}\n                  id={item.key}\n                  type=\"button\"\n                  className=\"contacts__list_btn\"\n                >\n                  Delete\n                </button>{\" \"}\n              </li>\n            );\n          })\n          : contacts\n            .filter((item) =>\n              item.name.toLowerCase().includes(filter.toLowerCase())\n            )\n            .map((item) => {\n              return (\n                <li key={item.key}>\n                  {`${item.name}: ${item.number}`}{\" \"}\n                  <button\n                    onClick={deleteContact}\n                    type=\"button\"\n                    className=\"contacts__list_btn\"\n                  >\n                    Delete\n                  </button>{\" \"}\n                </li>\n              );\n            })}\n      </ul>\n    </div>\n  );\n\n\n  \n}\n\n\n\n// class ContactList extends Component {\n//   render() {\n//     const { contacts, state, deleteContact } = this.props;\n\n//     return (\n//       <div className=\"contacts\">\n//         <ul className=\"contacts__list\">\n//           {state.filter.length === 0\n//             ? contacts.map((item) => {\n//                 return (\n//                   <li key={item.key}>\n//                     {`${item.name}: ${item.number}`}{\" \"}\n//                     <button\n//                       onClick={deleteContact}\n//                       id={item.key}\n//                       type=\"button\"\n//                       className=\"contacts__list_btn\"\n//                     >\n//                       Delete\n//                     </button>{\" \"}\n//                   </li>\n//                 );\n//               })\n//             : contacts\n//                 .filter((item) =>\n//                   item.name.toLowerCase().includes(state.filter.toLowerCase())\n//                 )\n//                 .map((item) => {\n//                   return (\n//                     <li key={item.key}>\n//                       {`${item.name}: ${item.number}`}{\" \"}\n//                       <button\n//                         onClick={deleteContact}\n//                         type=\"button\"\n//                         className=\"contacts__list_btn\"\n//                       >\n//                         Delete\n//                       </button>{\" \"}\n//                     </li>\n//                   );\n//                 })}\n//         </ul>\n//       </div>\n//     );\n//   }\n// }\n\n// export default ContactList;\n","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport ContactForm from \"./components/ContactForm/ContactForm \";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nexport default function App() {\n  \n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState();\n  const [name, setName] = useState();\n  const [number, setNumber] = useState();\n\n  function handleChange(evt) {\n\n    switch (evt.target.name) {\n      case 'name':\n        setName(evt.target.value);\n        break;\n      \n      case 'tel':\n        setNumber(evt.target.value);\n        break;\n    \n      default:\n        break;\n    }\n  };\n\n  function handleAddContact () {\n    if (\n      contacts.find((contact) => {\n        return contact.name === name;\n      })\n    ) {\n      alert(`${name} is already in contacts`);\n    } else {\n      const contactsArr = contacts;\n      const newContact = {\n        key: shortid.generate(),\n        name: name,\n        number: number,\n      };\n\n      setContacts([...contactsArr, newContact]);\n\n      // LocalStorage-------\n\n      if (localStorage.getItem(\"contacts\") === null) {\n        localStorage.setItem(\n          \"contacts\",\n          JSON.stringify([...contactsArr, newContact])\n        );\n      } else {\n        const temperaryArr = JSON.parse(localStorage.getItem(\"contacts\"));\n        temperaryArr.push(newContact);\n        localStorage.setItem(\"contacts\", JSON.stringify(temperaryArr));\n      };\n      // -------------------\n    };\n  };\n\n  function filterContacts (evt) {\n    return setFilter(evt.target.value);\n  };\n\n  function deleteContact (evt) {\n    const contactsArr = contacts;\n    const id = evt.target.id;\n    const elementForRemove = contacts.find(\n      (item) => item.key === id\n    );\n    const index = contactsArr.indexOf(elementForRemove);\n    contactsArr.splice(index, 1);\n\n    // LocalStorage-------\n    localStorage.removeItem(\"contacts\");\n    localStorage.setItem(\"contacts\", JSON.stringify(contactsArr));\n    // --------------------\n\n    setContacts([...contactsArr]);\n  };\n\n\n\n  return (\n    <div className=\"container\">\n      <h1>Phonebook</h1>\n      <ContactForm\n        handleChange={handleChange}\n        handleAddContact={handleAddContact}\n      />\n\n      <h2>Contacts</h2>\n      <Filter\n        filterContacts={filterContacts}\n      />\n\n      <ContactList\n        filter={filter}\n        contacts={contacts}\n        key={contacts.key}\n        deleteContact={deleteContact}\n      />\n    </div>\n  \n  );\n};","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}